// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class ComposingCollectionView;
@class NSCoder;

/**
  Specialized Container Stack with an inside CollectionView
*/
SWIFT_CLASS("_TtC7Compose19CollectionStackView")
@interface CollectionStackView : UIView
/**
  CollectionView that will be displayed
*/
@property (nonatomic, readonly, strong) ComposingCollectionView * _Nonnull container;
/**
  Convenience init that set view frame to zero
*/
- (nonnull instancetype)init;
/**
  Common init with frame value
  \param frame view initial frame value

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/**
  Common init with wrapped content.
*/
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/**
  IBDesignable method, called to display this view inside Interface Builder
*/
- (void)prepareForInterfaceBuilder;
@end

@class UICollectionViewLayout;

/**
  CollectionView used to display units.
*/
SWIFT_CLASS("_TtC7Compose23ComposingCollectionView")
@interface ComposingCollectionView : UICollectionView
/**
  Inset applied to each section in the collectionView
*/
@property (nonatomic) UIEdgeInsets sectionInset;
/**
  Space applied between items in the collection
*/
@property (nonatomic) CGFloat itemSpace;
/**
  Space applied between lines in the collectionView
*/
@property (nonatomic) CGFloat lineSpace;
@property (nonatomic, copy) void (^ _Nullable scrollDidChangeCallback)(CGFloat);
/**
  Callback that will be invoked everytime the collection view finished updating it’s state
*/
@property (nonatomic, copy) void (^ _Nullable didFinishUpdateStateCallback)(void);
/**
  Convenience init that uses .zero frame and default layout
*/
- (nonnull instancetype)init;
/**
  Convenience init that uses the default layout
  \param frame initial view frame

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame;
/**
  Default init
  \param frame initial view frame

  \param layout initial view layout

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
/**
  Init that unwrap from Interface builder. Will override the view layout to the default type
*/
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


/**
  TableView used to display units.
*/
SWIFT_CLASS("_TtC7Compose18ComposingTableView")
@interface ComposingTableView : UITableView
/**
  Select animation behavior for inserting new items to the array
*/
@property (nonatomic) UITableViewRowAnimation insertionAnimation;
/**
  Select animation behavior for deleting new items to the array
*/
@property (nonatomic) UITableViewRowAnimation deletionAnimation;
/**
  Convenience init that uses .zero frame and default style
*/
- (nonnull instancetype)init;
/**
  Convenience init that uses the plain style
  \param frame initial view frame

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame;
/**
  Default init
  \param frame initial view frame

  \param style tableView Style

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
/**
  Init that unwrap from Interface builder.
*/
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/**
  Specialized Container Stack with an inside TableView
*/
SWIFT_CLASS("_TtC7Compose14TableStackView")
@interface TableStackView : UIView
/**
  CollectionView that will be displayed
*/
@property (nonatomic, readonly, strong) ComposingTableView * _Nonnull container;
/**
  Convenience init that set view frame to zero
*/
- (nonnull instancetype)init;
/**
  Common init with frame value
  \param frame view initial frame value

*/
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
/**
  Common init with wrapped content.
*/
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/**
  IBDesignable method, called to display this view inside Interface Builder
*/
- (void)prepareForInterfaceBuilder;
@end


@interface UICollectionViewCell (SWIFT_EXTENSION(Compose))
/**
  Try to find a nib for this CollectionViewCell. If it finds one, register it to the collectionView, else it register the class itself
  \param collectionView collectionView to register

*/
+ (void)registerIn:(UICollectionView * _Nonnull)collectionView customIdentifier:(NSString * _Nullable)customIdentifier;
@end


@interface UITableViewCell (SWIFT_EXTENSION(Compose))
/**
  Try to find a nib for this TableViewCell. If it finds one, register it to the tableView, else it register the class itself
  \param tableView tableView to register

*/
+ (void)registerIn:(UITableView * _Nonnull)tableView customIdentifier:(NSString * _Nullable)customIdentifier;
@end

@class UINib;

@interface UIView (SWIFT_EXTENSION(Compose))
/**
  Will try to find a XIB with the same name as the class in it’s bundle.

  returns:
  the nib if found
*/
+ (UINib * _Nullable)nibForSelf;
/**
  give each UIView an identifier we can use

  returns:
  the short class name
*/
+ (NSString * _Nonnull)identifier;
@end

#pragma clang diagnostic pop
